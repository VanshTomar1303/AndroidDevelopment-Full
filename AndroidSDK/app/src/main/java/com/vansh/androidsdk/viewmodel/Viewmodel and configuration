ðŸ“Œ 1. What is a ViewModel?
Part of Android Architecture Components (Jetpack).
Purpose: Store and manage UI-related data separately from Activity/Fragment.
Survives configuration changes like screen rotation.
Does not hold a reference to Activity or Fragment (prevents memory leaks).
Key Class: androidx.lifecycle.ViewModel

ðŸ“Œ 2. Configuration Changes in Android
Android can destroy & recreate your Activity on events like:
Screen rotation (portrait â†” landscape)
Language change
Multi-window mode
Problem without ViewModel:
UI data (like user input, scroll position, API results) is lost during recreation.
Example: You rotate the screen â†’ onCreate() runs â†’ data resets.

ðŸ“Œ 3. How ViewModel Helps
ViewModel lives longer than Activity/Fragment lifecycle.
Survives configuration changes but dies when Activity is finishing.
You can safely store UI data, API results, or state there.

ðŸ“Œ 5. ViewModel vs SavedInstanceState
| Aspect    | ViewModel                | SavedInstanceState                                |
| --------- | ------------------------ | ------------------------------------------------- |
| Purpose   | Store UI-related data    | Store small data to survive config changes        |
| Lifetime  | Survives config changes  | Survives config changes but **not process death** |
| Data Type | Objects, LiveData, lists | Primitive types, small data (Bundle)              |
